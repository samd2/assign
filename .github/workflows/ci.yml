name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - githubactions*
      - feature/**
      - fix/**
      - pr/**


env:
    B2_VARIANT: variant=release,debug

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "B2_TOOLSET=gcc-4.8 B2_CXXSTD=03,11 Job 0"
            buildtype: "boost"
            packages: "g++-4.8"
            os: "ubuntu-16.04"
            cxx: "g++-4.8"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            b2_toolset: "gcc-4.8"
            b2_cxxstd: "03,11"
            drone_job_uuid: "b6589fc6ab"
          - name: "B2_TOOLSET=gcc-5 B2_CXXSTD=11 Job 1"
            buildtype: "boost"
            packages: "g++-5"
            os: "ubuntu-16.04"
            cxx: "g++-5"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            b2_toolset: "gcc-5"
            b2_cxxstd: "11"
            drone_job_uuid: "356a192b79"
          - name: "B2_TOOLSET=gcc-6 B2_CXXSTD=11,14 Job 2"
            buildtype: "boost"
            packages: "g++-6"
            os: "ubuntu-16.04"
            cxx: "g++-6"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            b2_toolset: "gcc-6"
            b2_cxxstd: "11,14"
            drone_job_uuid: "da4b9237ba"
          - name: "B2_TOOLSET=gcc-7 B2_CXXSTD=11,14,17 Job 3"
            buildtype: "boost"
            packages: "g++-7"
            os: "ubuntu-16.04"
            cxx: "g++-7"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            b2_toolset: "gcc-7"
            b2_cxxstd: "11,14,17"
            drone_job_uuid: "77de68daec"
          - name: "B2_TOOLSET=gcc-8 B2_CXXSTD=14,17,2a Job 4"
            buildtype: "boost"
            packages: "g++-8"
            os: "ubuntu-16.04"
            cxx: "g++-8"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            b2_toolset: "gcc-8"
            b2_cxxstd: "14,17,2a"
            drone_job_uuid: "1b64538924"
          - name: "B2_TOOLSET=clang-3.8 B2_CXXSTD=03,11,14 Job 5"
            buildtype: "boost"
            packages: "clang-3.8 libstdc++-6-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-3.8"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "3.8"
            b2_toolset: "clang-3.8"
            b2_cxxstd: "03,11,14"
            drone_job_uuid: "ac3478d69a"
          - name: "B2_TOOLSET=clang-4.0 B2_CXXSTD=11,14 Job 6"
            buildtype: "boost"
            packages: "clang-4.0 libstdc++-6-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-4.0"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "4.0"
            b2_toolset: "clang-4.0"
            b2_cxxstd: "11,14"
            drone_job_uuid: "c1dfd96eea"
          - name: "B2_TOOLSET=clang-5.0 B2_CXXSTD=11,14,17 Job 7"
            buildtype: "boost"
            packages: "clang-5.0 libstdc++-7-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-5.0"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "5.0"
            b2_toolset: "clang-5.0"
            b2_cxxstd: "11,14,17"
            drone_job_uuid: "902ba3cda1"
          - name: "B2_TOOLSET=clang-6.0 B2_CXXSTD=14,17,2a Job 8"
            buildtype: "boost"
            packages: "clang-6.0 libc6-dbg libc++-dev libstdc++-8-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-6.0"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "6.0"
            b2_toolset: "clang-6.0"
            b2_cxxstd: "14,17,2a"
            drone_job_uuid: "fe5dbbcea5"
          - name: "B2_TOOLSET=clang-7 B2_CXXSTD=14,17,2a Job 9"
            buildtype: "boost"
            packages: "clang-7 libc6-dbg libc++-dev libstdc++-8-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-7"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "7"
            b2_toolset: "clang-7"
            b2_cxxstd: "14,17,2a"
            drone_job_uuid: "0ade7c2cf9"
          - name: "B2_TOOLSET=clang-8 B2_CXXSTD=14,17,2a Job 10"
            buildtype: "boost"
            packages: "clang-8 libc6-dbg libc++-dev libstdc++-8-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-8"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "8"
            b2_toolset: "clang-8"
            b2_cxxstd: "14,17,2a"
            drone_job_uuid: "b1d5781111"
          - name: "B2_TOOLSET=clang-6.0 B2_CXXSTD=03,11,14,17,2a Job 11"
            buildtype: "boost"
            packages: "clang-6.0 libc6-dbg libc++-dev libstdc++-8-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-6.0"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "6.0"
            b2_toolset: "clang-6.0"
            b2_cxxstd: "03,11,14,17,2a"
            b2_cxxflags: "-stdlib=libc++"
            drone_job_uuid: "17ba079149"
          - name: "COMMENT=codecov.io B2_TOOLSET=gcc-7 B2_DEFINE Job 13"
            buildtype: "b5847f804b-bbb3de2b00"
            packages: "g++-7"
            os: "ubuntu-16.04"
            cxx: "g++-7"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            comment: "codecov.io"
            b2_toolset: "gcc-7"
            b2_defines: "define=BOOST_NO_STRESS_TEST=1"
            drone_job_uuid: "bd307a3ec3"
          - name: "COMMENT=cppcheck Job 14"
            buildtype: "b5847f804b-ed45733e6c"
            packages: "binutils-gold gdb libc6-dbg"
            os: "ubuntu-16.04"
            cxx: "g++"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            comment: "cppcheck"
            drone_job_uuid: "fa35e19212"
          - name: "COMMENT=ubsan B2_VARIANT=variant=debug B2_TOO Job 15"
            buildtype: "boost"
            packages: "g++-8"
            os: "ubuntu-16.04"
            cxx: "g++-8"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            comment: "ubsan"
            b2_variant: "variant=debug"
            b2_toolset: "gcc-8"
            b2_cxxstd: "03,11,14,17,2a"
            b2_defines: "define=BOOST_NO_STRESS_TEST=1"
            b2_cxxflags: "cxxflags=-fno-omit-frame-pointer cxxflags=-fsanitize=undefined cxxflags=-fno-sanitize-recover=undefined"
            b2_linkflags: "linkflags=-fsanitize=undefined linkflags=-fno-sanitize-recover=undefined linkflags=-fuse-ld=gold"
            ubsan_options: "print_stacktrace=1"
            drone_job_uuid: "f1abd67035"
          - name: "COMMENT=valgrind B2_TOOLSET=clang-6.0 B2_CXXS Job 16"
            buildtype: "b5847f804b-db180b7bd2"
            packages: "clang-6.0 libc6-dbg libc++-dev libstdc++-8-dev"
            os: "ubuntu-16.04"
            cxx: "clang++-6.0"
            cxxflags: ""
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "6.0"
            comment: "valgrind"
            b2_toolset: "clang-6.0"
            b2_cxxstd: "03,11,14,17,2a"
            b2_defines: "define=BOOST_NO_STRESS_TEST=1"
            b2_variant: "variant=debug"
            b2_testflags: "testing.launcher=valgrind"
            valgrind_opts: "--error-exitcode=1"
            drone_job_uuid: "1574bddb75"
          - name: "COMMENT=Coverity Scan B2_TOOLSET=gcc Job 17"
            buildtype: "b5847f804b-cce9827eb5"
            packages: "binutils-gold gdb libc6-dbg"
            os: "ubuntu-16.04"
            cxx: "g++"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            comment: "Coverity Scan"
            b2_toolset: "gcc"
            drone_job_uuid: "0716d9708d"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: boost
        #if: ${{ matrix.buildtype }} == boost
        if: matrix.buildtype == 'boost'
        shell: bash
        env:
          TRAVIS_BRANCH: ${{ github.base_ref }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: ${{ matrix.cxxflags }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          B2_TOOLSET: ${{ matrix.b2_toolset }}
          B2_CXXSTD: ${{ matrix.b2_cxxstd }}
          DRONE_JOB_UUID: ${{ matrix.drone_job_uuid }}
          B2_CXXFLAGS: ${{ matrix.b2_cxxflags }}
          COMMENT: ${{ matrix.comment }}
          B2_DEFINES: ${{ matrix.b2_defines }}
          B2_VARIANT: ${{ matrix.b2_variant }}
          B2_LINKFLAGS: ${{ matrix.b2_linkflags }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          B2_TESTFLAGS: ${{ matrix.b2_testflags }}
          VALGRIND_OPTS: ${{ matrix.valgrind_opts }}
        run: |
          echo '==================================> SETUP'
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          ./.github/boost-ci/ci/drone/linux-cxx-install.sh
          echo '==================================> INSTALL AND COMPILE'
          . .github/scripts/boost.sh
       
      - name: b5847f804b-bbb3de2b00
        #if: ${{ matrix.buildtype }} == b5847f804b-bbb3de2b00
        if: matrix.buildtype == 'b5847f804b-bbb3de2b00'
        shell: bash
        env:
          TRAVIS_BRANCH: ${{ github.base_ref }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: ${{ matrix.cxxflags }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          B2_TOOLSET: ${{ matrix.b2_toolset }}
          B2_CXXSTD: ${{ matrix.b2_cxxstd }}
          DRONE_JOB_UUID: ${{ matrix.drone_job_uuid }}
          B2_CXXFLAGS: ${{ matrix.b2_cxxflags }}
          COMMENT: ${{ matrix.comment }}
          B2_DEFINES: ${{ matrix.b2_defines }}
          B2_VARIANT: ${{ matrix.b2_variant }}
          B2_LINKFLAGS: ${{ matrix.b2_linkflags }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          B2_TESTFLAGS: ${{ matrix.b2_testflags }}
          VALGRIND_OPTS: ${{ matrix.valgrind_opts }}
        run: |
          echo '==================================> SETUP'
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          ./.github/boost-ci/ci/drone/linux-cxx-install.sh
          echo '==================================> INSTALL AND COMPILE'
          . .github/scripts/b5847f804b-bbb3de2b00.sh
       
      - name: b5847f804b-ed45733e6c
        #if: ${{ matrix.buildtype }} == b5847f804b-ed45733e6c
        if: matrix.buildtype == 'b5847f804b-ed45733e6c'
        shell: bash
        env:
          TRAVIS_BRANCH: ${{ github.base_ref }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: ${{ matrix.cxxflags }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          B2_TOOLSET: ${{ matrix.b2_toolset }}
          B2_CXXSTD: ${{ matrix.b2_cxxstd }}
          DRONE_JOB_UUID: ${{ matrix.drone_job_uuid }}
          B2_CXXFLAGS: ${{ matrix.b2_cxxflags }}
          COMMENT: ${{ matrix.comment }}
          B2_DEFINES: ${{ matrix.b2_defines }}
          B2_VARIANT: ${{ matrix.b2_variant }}
          B2_LINKFLAGS: ${{ matrix.b2_linkflags }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          B2_TESTFLAGS: ${{ matrix.b2_testflags }}
          VALGRIND_OPTS: ${{ matrix.valgrind_opts }}
        run: |
          echo '==================================> SETUP'
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          ./.github/boost-ci/ci/drone/linux-cxx-install.sh
          echo '==================================> INSTALL AND COMPILE'
          . .github/scripts/b5847f804b-ed45733e6c.sh
       
      - name: b5847f804b-db180b7bd2
        #if: ${{ matrix.buildtype }} == b5847f804b-db180b7bd2
        if: matrix.buildtype == 'b5847f804b-db180b7bd2'
        shell: bash
        env:
          TRAVIS_BRANCH: ${{ github.base_ref }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: ${{ matrix.cxxflags }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          B2_TOOLSET: ${{ matrix.b2_toolset }}
          B2_CXXSTD: ${{ matrix.b2_cxxstd }}
          DRONE_JOB_UUID: ${{ matrix.drone_job_uuid }}
          B2_CXXFLAGS: ${{ matrix.b2_cxxflags }}
          COMMENT: ${{ matrix.comment }}
          B2_DEFINES: ${{ matrix.b2_defines }}
          B2_VARIANT: ${{ matrix.b2_variant }}
          B2_LINKFLAGS: ${{ matrix.b2_linkflags }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          B2_TESTFLAGS: ${{ matrix.b2_testflags }}
          VALGRIND_OPTS: ${{ matrix.valgrind_opts }}
        run: |
          echo '==================================> SETUP'
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          ./.github/boost-ci/ci/drone/linux-cxx-install.sh
          echo '==================================> INSTALL AND COMPILE'
          . .github/scripts/b5847f804b-db180b7bd2.sh
       
      - name: b5847f804b-cce9827eb5
        #if: ${{ matrix.buildtype }} == b5847f804b-cce9827eb5
        if: matrix.buildtype == 'b5847f804b-cce9827eb5'
        shell: bash
        env:
          TRAVIS_BRANCH: ${{ github.base_ref }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: ${{ matrix.cxxflags }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          B2_TOOLSET: ${{ matrix.b2_toolset }}
          B2_CXXSTD: ${{ matrix.b2_cxxstd }}
          DRONE_JOB_UUID: ${{ matrix.drone_job_uuid }}
          B2_CXXFLAGS: ${{ matrix.b2_cxxflags }}
          COMMENT: ${{ matrix.comment }}
          B2_DEFINES: ${{ matrix.b2_defines }}
          B2_VARIANT: ${{ matrix.b2_variant }}
          B2_LINKFLAGS: ${{ matrix.b2_linkflags }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          B2_TESTFLAGS: ${{ matrix.b2_testflags }}
          VALGRIND_OPTS: ${{ matrix.valgrind_opts }}
        run: |
          echo '==================================> SETUP'
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          ./.github/boost-ci/ci/drone/linux-cxx-install.sh
          echo '==================================> INSTALL AND COMPILE'
          . .github/scripts/b5847f804b-cce9827eb5.sh
       



  osx:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "B2_TOOLSET=clang B2_CXXSTD=03,11,17 Job 12"
            buildtype: "boost"
            packages: "binutils-gold gdb libc6-dbg"
            os: "macos-10.15"
            cxx: "g++"
            cxxflags: ""
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: ""
            b2_toolset: "clang"
            b2_cxxstd: "03,11,17"
            drone_job_uuid: "7b52009b64"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set DEVELOPER_DIR
        if: matrix.xcode_version != ''
        run: echo "::set-env name=DEVELOPER_DIR:/Applications/Xcode-:${{ matrix.xcode_version }}.app/Contents/Developer"
      - name: Test DEVELOPER_DIR
        run: echo $DEVELOPER_DIR
      - name: boost
        #if: ${{ matrix.buildtype }} == boost
        if: matrix.buildtype == 'boost'
        shell: bash
        env:
          TRAVIS_BRANCH: ${{ github.base_ref }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: ${{ matrix.cxxflags }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          B2_TOOLSET: ${{ matrix.b2_toolset }}
          B2_CXXSTD: ${{ matrix.b2_cxxstd }}
          DRONE_JOB_UUID: ${{ matrix.drone_job_uuid }}
          B2_CXXFLAGS: ${{ matrix.b2_cxxflags }}
          COMMENT: ${{ matrix.comment }}
          B2_DEFINES: ${{ matrix.b2_defines }}
          B2_VARIANT: ${{ matrix.b2_variant }}
          B2_LINKFLAGS: ${{ matrix.b2_linkflags }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          B2_TESTFLAGS: ${{ matrix.b2_testflags }}
          VALGRIND_OPTS: ${{ matrix.valgrind_opts }}
        run: |
          echo '==================================> SETUP'
          uname -a
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && /usr/local/bin/wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mv boost-ci-$BOOST_CI_BRANCH .drone/boost-ci
          echo '==================================> PACKAGES'
          ./.drone/boost-ci/ci/drone/osx-cxx-install.sh

          echo '==================================> INSTALL AND COMPILE'
          . .github/scripts/boost.sh
       

